<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="dp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAMAAACahl6sAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAMAUExURQowTv///4SXpvDy9Bk9WUdkemZ+kcLL06OxvODl6SlKZNHY
        3jhXb1dxhrK+x3aLnJOksRERERISEhMTExQUFBUVFRYWFhcXFxgYGBkZGRoaGhsbGxwcHB0dHR4eHh8f
        HyAgICEhISIiIiMjIyQkJCUlJSYmJicnJygoKCkpKSoqKisrKywsLC0tLS4uLi8vLzAwMDExMTIyMjMz
        MzQ0NDU1NTY2Njc3Nzg4ODk5OTo6Ojs7Ozw8PD09PT4+Pj8/P0BAQEFBQUJCQkNDQ0REREVFRUZGRkdH
        R0hISElJSUpKSktLS0xMTE1NTU5OTk9PT1BQUFFRUVJSUlNTU1RUVFVVVVZWVldXV1hYWFlZWVpaWltb
        W1xcXF1dXV5eXl9fX2BgYGFhYWJiYmNjY2RkZGVlZWZmZmdnZ2hoaGlpaWpqamtra2xsbG1tbW5ubm9v
        b3BwcHFxcXJycnNzc3R0dHV1dXZ2dnd3d3h4eHl5eXp6ent7e3x8fH19fX5+fn9/f4CAgIGBgYKCgoOD
        g4SEhIWFhYaGhoeHh4iIiImJiYqKiouLi4yMjI2NjY6Ojo+Pj5CQkJGRkZKSkpOTk5SUlJWVlZaWlpeX
        l5iYmJmZmZqampubm5ycnJ2dnZ6enp+fn6CgoKGhoaKioqOjo6SkpKWlpaampqenp6ioqKmpqaqqqqur
        q6ysrK2tra6urq+vr7CwsLGxsbKysrOzs7S0tLW1tba2tre3t7i4uLm5ubq6uru7u7y8vL29vb6+vr+/
        v8DAwMHBwcLCwsPDw8TExMXFxcbGxsfHx8jIyMnJycrKysvLy8zMzM3Nzc7Ozs/Pz9DQ0NHR0dLS0tPT
        09TU1NXV1dbW1tfX19jY2NnZ2dra2tvb29zc3N3d3d7e3t/f3+Dg4OHh4eLi4uPj4+Tk5OXl5ebm5ufn
        5+jo6Onp6erq6uvr6+zs7O3t7e7u7u/v7/Dw8PHx8fLy8vPz8/T09PX19fb29vf39/j4+Pn5+fr6+vv7
        +/z8/P39/f7+/v///9Ao9rUAAAAJcEhZcwAACxMAAAsTAQCanBgAAASeSURBVHhe7Z3bgqowDEUFyl2E
        ///aAxoUFKSpJGzOZD06VhLb3NrUuRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGoYdrb3meR0neZRW9
        dEaqIppQFidVxs3UeFB359OlTUj4N+r2VLq4nORe4kS6pCvT8aRI6Z3YZCTuN4oTzIqPHlGUtPR2WPz0
        6MkdjcDEW4/e6q80BpHrlp1PSXA1cTXJ6EcNu7piktCXnMahUZF8/oD6roX8aoMEcnHxJySKYhoLRUvC
        cUhoLBQ8l0U0NBgIR6LxKGg0ECmJxqOk0UAwspMpeH6LGw0JvNrkryuCF0lMETT+uiJ4oT0sIAJ6rUBF
        8OrdkCy+h0YjQZLxqGkwEiXJxgIw+71827peBbFq70g2Foh7W0GBhMZCwd9E6aGxSIQVVoA2wtn2fYG3
        jRIY2PHW1n+jyJUE40LDgSDBmABuBwVtNCKeLASFEcRd7LA4AnjkHlaP0GAoQtL4G42FoiHhOGA2c/DN
        HdDUB9gnJJDnVQNcK0E9nr7cSEBfQFcW/zgU09R7mIkjrIlwjQQyiDzgOWDAo+kR1toCXlm8tQXrswYY
        KTBmQ82I899L6WgIKN7bjdgT0k+Jr5VAW8iAp5UAbjq843e6AJudvKh87B3c0h94LC7EA7cFNhOV5CQ3
        L7b6mIFbsN/Y8MEZve0EfO2RP5EevSarc5KcwPFOWbOT8jT2MbJ0ga8vCsEzrBmjrM2HoZTANeEnrh7v
        hbh4pkoSjypmZ5iXwTjqMeC59mkqt6ezcjfsa0kPHkY+cU1VE8dxO3FVd4eWoC+ydHS7q+XGWHnlyG54
        6qnKRUGfig4mQ6/B8WbbC995M69VSsgY/67GwOyC8bX7jPYlnP+qFtS4Uxdxlvb2nq/8PSqQzD7ln1VN
        SEBuU1ftaoLoTRkfXWq5jHu4s8aR07KfFnfqg5xYs6sWd5JCP3VpfjeMRZQDfhXU4+tHpxhaPiuNPdEr
        IsP6gPzRSo1Dek546Gx8Mc5yglHZUg1qgeeiEFIC77swUTjP+ik/9Ee81VxnQnofTM8TI/CSHh9pKxHK
        TD4R7uWSjyFPZCsUJVMfEDX3sN91CEM0KCquLNm1pbiyZNeWQpr1QtBvhV52CYSeKkDIj+r8gFxZsv92
        w1fk+jxUTUTQSJRNRM5IlE1ErhdKNYoMSEWSjV6Z/ZG6tU8fr4dQuhV6ifUH6Mk7I70vt4CMtatVuS9k
        6l3Bjes1ZE6w1Z2WVGynD9dExG2pJygD9OxdOcD7ypS76pnWgIT/PcD7yvhf5arqgYT/PSCMyBSJB4QR
        mUBCH62LhCLqZdWASLKVKe89RGLt51dlM8nFdn+X28SlEG3elG3emLLcpbofTikuKrTWSDU4TamFp+OB
        k+590GttvoqmK6r/92bSGr4zai1049eViagi7asW2V+Vw5rl91Xl0IsY6W5h5YBO2TlVvMO0lC3ErYWm
        +ClxOaJteQ2XheqSQF27uNMsXHTZoO5w5mJGlRXeJUvdNWi3eZ5XQe+4NL5taJMX0+t8PZo5CZNr2sa3
        fJ6SJXlexG0KLPUGVZrCLSLD+GNcLv8A99k2B94gSjoAAAAASUVORK5CYII=
</value>
  </data>
</root>